// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:der_die_das/secrets.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: API_KEY_ANDROID,
    appId: APP_ID_ANDROID,
    messagingSenderId: MESSAGING_SENDER_ID_ANDROID,
    projectId: PROJECT_ID_ANDROID,
    storageBucket: STORAGE_BUCKET_ANDROID,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: API_KEY_IOS,
    appId: APP_ID_IOS,
    messagingSenderId: MESSSAGING_SENDER_ID_IOS,
    projectId: PROJECT_ID_IOS,
    storageBucket: STORAGE_BUCKET_IOS,
    iosBundleId: IOS_BUNDLE_ID,
  );

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: API_KEY_WEB,
    appId: APP_ID_WEB,
    messagingSenderId: MESSAGING_SENDER_ID_WEB,
    projectId: PROJECT_ID_WEB,
    authDomain: AUTH_DOMAIN_WEB,
    storageBucket: STORAGE_BUCKET_WEB,
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: API_KEY_MACOS,
    appId: APP_ID_MACOS,
    messagingSenderId: MESSAGING_SENDER_ID_MACOS,
    projectId: PROJECT_ID_MACOS,
    storageBucket: STORAGE_BUCKET_MACOS,
    iosBundleId: IOS_BLUNDLE_ID_MACOS,
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: API_KEY_WINDOWS,
    appId: APP_ID_WINDOWS,
    messagingSenderId: MESSAGING_SENDER_ID_WINDOWS,
    projectId: PROJECT_ID_WINDOWS,
    authDomain: AUTH_DOMAIN_WINDOWS,
    storageBucket: STORAGE_BUCKET_WINDOWS,
  );
}
